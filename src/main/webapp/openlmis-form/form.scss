
/*
Forms

## General Rules
When creating a form in OpenLMIS-UI, our approach is to keep the markup as simple
as possible. Additional styles and functionality should be added through semantic
CSS or AngularJS directives.

*Note:* All form styles are based off the Bootstrap 3 guidelines, and all
Bootstrap 3 markup will work.

**Conventions:**
* Don't use disabled states, hide form controls when not needed
  * Only form elements such as `<input type="text">` or `<select>` can be disabled
* Form actions happen on form submit or button click (not magically)
  * Only internal form actions may 'magically' update (ie a `<select>` filter)
  * Always include a submit button with an action label (ie 'Search' or 'Save')
* Labels for form elements must always be visible
  * Radio and checkboxes must be surrounded in a fieldset (with a legend)
* Required fields must always be marked
* No placeholders
  * Unless the element is `<select>`

## Error Messages
There are two types of error messages in a form, input-level messages and
form-level messages.

Form-level messages should be shown at the top for the form. These elements are
only shown after a form is submitted, and recieve focus when the form
submission fails. Once a form is resubmitted the error is removed.

Input-level messages are shown below the input element that has an error. All
error messages must use ARIA labels so they are associated with the input
element.

markup:
<form>
	<!-- Form headings should be an appropriate heading level -->
	<h3>Example form elements</h3>
	<label for="exampleTextInput" >Example text input</label>
	<input id="exampleTextInput" type="text" ng-model="exampleText" ng-required />
	<label for="exampleSelect">Example combo box element</label>
	<select id="exampleSelect" ng-model="exampleSelect">
		<option value="">--Select Option--</option>
		<option value="0">EPI</option>
		<option value="1">ART</option>
		<option value="2">Essential Medicines</option>
		<option value="3">Family Planning</option>
		<option value="4">Malaria</option>
	</select>
	<label>
		<input type="checkbox" ng-model="booleanCheckbox" ng-value="true" />
		Boolean checkbox, used to turn a value on or off
	</label>
	<fieldset>
		<legend>Radio elements</legend>
		<label>
			<input type="radio" ng-model="radioOptions" value="0" />
			Radio 1
		</label>
		<label>
			<input type="radio" ng-model="radioOptions" value="1" />
			Radio 2
		</label>
	</fieldset>
	<input type="submit" value="Save" />
</form>

Styleguide 3.0

*/

// form {
// 	display: flex;
// 	flex-direction: row;
// 	flex-wrap: wrap;
// 	> * {
// 		display: block;
// 		clear: both;
// 		width: auto;
// 		flex: 1 0 auto;
// 	}
// 	> label, > fieldset{
// 		min-width: 100%;
// 	}

// 	> input[type="submit"],
// 	> input[type="button"],
// 	> button {
// 		flex: 0 0 auto;
// 	}
// }

// form > fieldset{
// 	@extend form;
// }
// 

form > input[type="submit"]{
  float: right;
}


textarea {
  resize: none;
}

input[type="text"]::-ms-clear {
  display: none;
}


input[type='file'] {
  line-height: normal;
}

input[type='text'] {
  outline: 0 none !important;
}

input[placeholder].placeholder {
  color: $medium-gray;
}

span.required {
  color: #d31717;
  font-weight: bold;
}

// hide element, but keep it accessible by screen readers
.visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}

textarea:focus,
input[type="text"]:focus,
input[type="password"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="time"]:focus,
input[type="week"]:focus,
input[type="number"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="color"]:focus,
.uneditable-input:focus {
  border-color: $heading-green;
  outline: 0;
  outline: thin dotted     \9;
  box-shadow: inset 0 0.1em 0.1em $light-shadow, 0 0 0.5em rgba($cyan, 0.6);
}

.ng-submitted {

    label.ng-invalid {
        color: $red;
    }

    select.ng-invalid {
        border-color: $red;
        color: $red;
    }

    select.ng-invalid:focus {
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px $red;
    }

    select.ng-invalid > option {
        color: black;
    }
}
