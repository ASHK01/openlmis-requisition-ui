
/*
Selects

Select boxes should be used only when a list of radio buttons or checkboxes
would take up too much space. The reason for this is that select boxes hide
options, which adds a cognative step for a user.

Every select box will show a "clear selection" button after a selection has
been made.

All select boxes should implement a placeholder message, and start with their
value unset. Implementers should use specific and tailored language as their
select element placeholder.

markup:
<form>
	<label for="select-single-option">Select with no selection</label>
	<select id="select-single-option">
	  <option>Ignored placeholder value</option>
	  <option value="selected-default-option">Selected default option</option>
	</select>
	<fieldset ng-init="
		selectValue='animal';
		options = {
			'animal': {
				name: 'Animals that do not exist',
				options: ['Unicorn']
			},
			'variable':{
				name: 'Variables that do not exist',
				options: ['foo', 'bar', 'baz']
			}
		};
		">
		<legend>ngModel based select elements</legend>
		<a ng-click="selectValue=undefined">Reset</a>
		<label for="select-ng-options">Select using ngOptions</label>
		<select id="select-ng-options"
			ng-model="selectValue"
			ng-options="key as value.name for (key, value) in options"
		>
			<option value="">Select a non-existant thing</option>
		</select>
		<label for="select-updated">Select with dynamic options</label>
		<select id="select-updated"
			placeholder="Pick something"
			ng-model="secondOption"
			ng-options="value for value in options[selectValue].options"
			>
		</select>
	</fieldset>
	<label for="select-more-than-10">Select if there is more than 10 items</label>
	<select id="select-more-than-10" ng-model="selectColor" ng-options="color for color in ['Blue', 'Purple', 'Maroon', 'Red', 'Rose', 'Peach', 'Yellow', 'Lime', 'Green', 'Seafoam', 'Teal']">
	</select>
</form>


Styleguide 3.1

*/

select{
	@extend .form-control;

	& + a.clear{
		display: block;
	}

	&[disabled] + a.clear{
		display: none;
	}
}

select {
  box-shadow: none;
}

select.pop-out {

	option {
		display: none;
	}
}

// form > select{
// 	width: auto;
// 	border: $gray-light 1px solid;
// 	& + a.clear{
// 		@include button-color($gray-light);
// 		flex: 0 0 auto;
// 		position:relative;
// 		width: 2em;
// 		overflow: hidden;
// 		text-indent: -300em;
// 		text-decoration: none;
// 		&:before{
// 			content: "\f00d";
// 			position: absolute;
// 			top: 0px;
// 			left: 0px;
// 			font-family: FontAwesome;
// 			font-weight: normal;
// 			font-style: normal;
// 			display: inline-block;
// 			text-decoration: inherit;
// 			line-height: 1em;
// 			text-indent: 0em;
// 			width: 100%;
// 			text-align: center;
// 			@include transform(translateY(50%));
// 		}
// 		&:hover{
// 			text-decoration: none;
// 		}
// 	}
// }
